<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Kwai</title>
  
  <subtitle>一个Java填坑路上摸爬滚打的小菜鸟</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-09T05:33:47.583Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Kwai Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SQL 优化</title>
    <link href="http://yoursite.com/2018/10/08/SQL%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2018/10/08/SQL优化/</id>
    <published>2018-10-08T09:23:55.000Z</published>
    <updated>2018-10-09T05:33:47.583Z</updated>
    
    <content type="html"><![CDATA[SQL 优化：<br> 在实际项目中，SQL性能是一个老生常谈的问题。那么我们该怎么去做好SQL的性能优化，如何写出好的SQL呢？<br><a id="more"></a><the rest="" of="" contents="" |="" 余下全文=""><h1 id="负向查询不能使用索引"><a href="#负向查询不能使用索引" class="headerlink" title="负向查询不能使用索引"></a>负向查询不能使用索引</h1><blockquote><p><code>select name from user where id not in (1,3,4);</code><br><strong>应该修改为:</strong><br><code>select name from user where id in (2,5,6);</code></p></blockquote><h1 id="前导模糊查询不能使用索引"><a href="#前导模糊查询不能使用索引" class="headerlink" title="前导模糊查询不能使用索引"></a>前导模糊查询不能使用索引</h1><blockquote><p><strong>如:</strong><br><code>select name from user where name like &#39;%zhangsan&#39;</code><br><strong>非前导则可以:</strong><br><code>select name from user where name like &#39;zhangsan%&#39;</code><br>建议可以考虑使用 Lucene 等全文索引工具来代替频繁的模糊查询。<br>数据区分不明显的不建议创建索引<br>如 user 表中的性别字段，可以明显区分的才建议创建索引，如身份证等字段。<br>字段的默认值不要为 null<br>这样会带来和预期不一致的查询结果。<br>在字段上进行计算不能命中索引<br><code>select name from user where FROM_UNIXTIME(create_time) &lt; CURDATE();</code><br>应该修改为:<br><code>select name from user where create_time &lt; FROM_UNIXTIME(CURDATE());</code></p></blockquote><h1 id="最左前缀问题"><a href="#最左前缀问题" class="headerlink" title="最左前缀问题"></a>最左前缀问题</h1><blockquote><p>如果给 user 表中的 username pwd 字段创建了复合索引那么使用以下SQL 都是可以命中索引:<br><code>select username from user where username=&#39;zhangsan&#39; and pwd =&#39;axsedf1sd&#39;</code><br><code>select username from user where pwd =&#39;axsedf1sd&#39; and username=&#39;zhangsan&#39;</code><br><code>select username from user where username=&#39;zhangsan&#39;</code><br>但是使用<br><code>select username from user where pwd =&#39;axsedf1sd&#39;</code><br>是不能命中索引的。<br>如果明确知道只有一条记录返回<br><code>select name from user where username=&#39;zhangsan&#39; limit 1</code><br>可以提高效率，可以让数据库停止游标移动。<br>不要让数据库帮我们做强制类型转换<br><code>select name from user where telno=18722222222</code><br>这样虽然可以查出数据，但是会导致全表扫描。<br>需要修改为<br><code>select name from user where telno=&#39;18722222222&#39;</code><br>如果需要进行 join 的字段两表的字段类型要相同<br>不然也不会命中索引。</p></blockquote></the>]]></content>
    
    <summary type="html">
    
      SQL 优化：&lt;br&gt; 在实际项目中，SQL性能是一个老生常谈的问题。那么我们该怎么去做好SQL的性能优化，如何写出好的SQL呢？&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello, Kwai!</title>
    <link href="http://yoursite.com/2018/10/08/Hello-Kwai/"/>
    <id>http://yoursite.com/2018/10/08/Hello-Kwai/</id>
    <published>2018-10-08T09:23:55.000Z</published>
    <updated>2018-10-08T09:23:55.167Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
