[{"title":"SQL 优化","url":"/2018/10/08/SQL优化/","content":"{{title}}：\n 在实际项目中，SQL性能是一个老生常谈的问题。那么我们该怎么去做好SQL的性能优化，如何写出好的SQL呢？\n<!-- more -->\n<The rest of contents | 余下全文>\n\n# 负向查询不能使用索引\n>`select name from user where id not in (1,3,4);`<br/>**应该修改为:**<br/>`select name from user where id in (2,5,6);`\n# 前导模糊查询不能使用索引\n>**如:**<br/>```select name from user where name like '%zhangsan'```<br/>**非前导则可以:**<br/>```select name from user where name like 'zhangsan%'```\n>建议可以考虑使用 Lucene 等全文索引工具来代替频繁的模糊查询。\n数据区分不明显的不建议创建索引<br/>如 user 表中的性别字段，可以明显区分的才建议创建索引，如身份证等字段。\n字段的默认值不要为 null<br/>这样会带来和预期不一致的查询结果。\n在字段上进行计算不能命中索引<br/>```select name from user where FROM_UNIXTIME(create_time) < CURDATE();```<br/>应该修改为:<br/>`select name from user where create_time < FROM_UNIXTIME(CURDATE());`\n\n# 最左前缀问题\n>如果给 user 表中的 username pwd 字段创建了复合索引那么使用以下SQL 都是可以命中索引:<br/>`select username from user where username='zhangsan' and pwd ='axsedf1sd'`<br/>`select username from user where pwd ='axsedf1sd' and username='zhangsan'`<br/>`select username from user where username='zhangsan'`<br/>但是使用<br/>`select username from user where pwd ='axsedf1sd'`<br/>是不能命中索引的。<br/>如果明确知道只有一条记录返回<br/>`select name from user where username='zhangsan' limit 1`<br/>可以提高效率，可以让数据库停止游标移动。<br/>不要让数据库帮我们做强制类型转换<br/>`select name from user where telno=18722222222`<br/>这样虽然可以查出数据，但是会导致全表扫描。<br/>需要修改为<br/>`select name from user where telno='18722222222'`<br/>如果需要进行 join 的字段两表的字段类型要相同<br/>不然也不会命中索引。\n"},{"title":"Hello, Kwai!","url":"/2018/10/08/Hello-Kwai/"}]